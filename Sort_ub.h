#pragma once
/*******************************************************************/
/*              П Р О Т О Т И П Ы    Ф У Н К Ц И Й                 */
/*******************************************************************/
// СОРТИРОВКИ МАССИВА ПО УБЫВАНИЮ:

// Шейкерная сортировка по убыванию
void Shaker_sort_ub(int* pznachenue        // указатель на первый элемент динамического массива-вектора
	              , int begin              // начало динамического массива-вектора (не нужно фактически). Поставлено, чтобы все функции были в одном массиве
	              , int end                // конец динамического массива-вектора (не нужно фактически). Поставлено, чтобы все функции были в одном массиве
	              , int number);           // длина динамического массива-вектора  

// сортировка выбором  по убыванию
void Selection_sort_ub(int* pznachenue     // указатель на первый элемент динамического массива-вектора
	                 , int begin           // начало динамического массива-вектора (не нужно фактически). Поставлено, чтобы все функции были в одном массиве
	                 , int end             // конец динамического массива-вектора (не нужно фактически). Поставлено, чтобы все функции были в одном массиве
	                 , int number);        // длина динамического массива-вектора  

// сортировка вставками по убыванию
void Insertion_sort_ub(int* pznachenue     // указатель на первый элемент динамического массива-вектора
	                 , int begin           // указатель на первый элемент динамического массива-вектора
	                 , int end             // конец динамического массива-вектора (не нужно фактически). Поставлено, чтобы все функции были в одном массиве
	                 , int number);        // длина динамического массива-вектора  

// сортировка слиянием по убыванию
void Merge_sort_ub(int* pznachenue         // указатель на первый элемент динамического массива-вектора
	             , int begin               // начало динамического массива-вектора
	             , int end                 // конец динамического массива-вектора
	             , int number);            // длина динамического массива-вектора (не нужно фактически). Поставлено, чтобы все функции были в одном массиве

// "Влавствование" - сливание массивов для Merge_sort_ub
void Merge_ub(int* pznachenue              // указатель на первый элемент динамического массива-вектора
	        , int begin                    // начало динамического массива-вектора
	        , int middle                   // середина динамического массива-вектора
	        , int end);                    // конец динамического массива-вектора

// быстрая сортировка по убыванию
void Quick_sort_ub(int* pznachenue         // указатель на первый элемент динамического массива-вектора
	             , int begin               // начало динамического массива-вектора
	             , int end                 // конец динамического массива-вектора
	             , int number);            // длина динамического массива-вектора (не нужно фактически). Поставлено, чтобы все функции были в одном массиве 

// разделение и перестановка для Quick_sort_ub
int Partition_ub(int* pznachenue           // указатель на первый элемент динамического массива-вектора
	           , int begin                 // начало динамического массива-вектора
	           , int end);                 // конец динамического массива-вектора

// сортировка Шелла по убыванию
void Shell_sort_ub(int* pznachenue                      // указатель на первый элемент динамического массива-вектора
	             , int begin                            // начало динамического массива-вектора (не нужно фактически). Поставлено, чтобы все функции были в одном массиве
	             , int end                              // конец динамического массива-вектора (не нужно фактически). Поставлено, чтобы все функции были в одном массиве
	             , int number);                         // длина динамического массива-вектора