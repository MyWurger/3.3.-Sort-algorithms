#pragma once
/*******************************************************************/
/*              П Р О Т О Т И П Ы    Ф У Н К Ц И Й                 */
/*******************************************************************/
// ПОДРОБНЫЕ СОРТИРОВКИ МАССИВА ПО ВОЗРАСТАНИЮ:

// подробная Шейкерная сортировка по возрастанию
void Shaker_sort_podr(int* pznachenue         // указатель на первый элемент динамическогомассива-вектора
	                , int begin               // начало динамического массива-вектора (не нужно фактически). Поставлено, чтобы все функции были в одном массиве
	                , int end                 // конец динамического массива-вектора (не нужно фактически). Поставлено, чтобы все функции были в одном массиве
	                , int number);            // длина динамического массива-вектора

// подробная сортировка выбором  по возрастанию
void Selection_sort_podr(int* pznachenue      // указатель на первый элемент динамическогомассива-вектора
	                   , int begin            // начало динамического массива-вектора (не нужно фактически). Поставлено, чтобы все функции были в одном массиве
	                   , int end              // конец динамического массива-вектора (не нужно фактически). Поставлено, чтобы все функции были в одном массиве
	                   , int number);         // длина динамического массива-вектора

// подробная сортировка вставками по возрастанию
void Insertion_sort_podr(int* pznachenue      // указатель на первый элемент динамическогомассива-вектора
	                   , int begin            // начало динамического массива-вектора (не нужно фактически). Поставлено, чтобы все функции были в одном массиве
	                   , int end              // конец динамического массива-вектора (не нужно фактически). Поставлено, чтобы все функции были в одном массиве
	                   , int number);         // длина динамического массива-вектора

// подробная сортировка слиянием по возрастанию
void Merge_sort_podr(int* pznachenue          // указатель на первый элемент динамического массива-вектора
	               , int begin                // начало динамического массива-вектора
	               , int end                  // конец динамического массива-вектора
	               , int number);             // длина динамического массива-вектора (не нужно фактически). Поставлено, чтобы все функции были в одном массиве

// "Влавствование" - сливание массивов для Merge_podr
void Merge_podr(int* pznachenue               // указатель на первый элемент динамического массива-вектора
	          , int begin                     // начало динамического массива-вектора
	          , int middle                    // середина динамического массива-вектора
	          , int end);                     // конец динамического массива-вектора

// подробная быстрая сортировка по возрастанию
void Quick_sort_podr(int* pznachenue          // указатель на первый элемент динамического массива-вектора
	               , int begin                // начало динамического массива-вектора
	               , int end                  // конец динамического массива-вектора
	               , int number);             // длина динамического массива-вектора (не нужно фактически). Поставлено, чтобы все функции были в одном массиве

// разделение и перестановка для Quick_sort_podr
int Partition_podr(int* pznachenue            // указатель на первый элемент динамического массива-вектора
	             , int begin                  // начало динамического массива-вектора
               	 , int end);                  // конец динамического массива-вектора  

// подробная сортировка Шелла по возрастанию
void Shell_sort_podr(int* pznachenue          // указатель на первый элемент динамического вектора
	               , int begin                // начало динамического массива-вектора (не нужно фактически). Поставлено, чтобы все функции были в одном массиве
	               , int end                  // конец динамического массива-вектора (не нужно фактически). Поставлено, чтобы все функции были в одном массиве
	               , int number);             // длина динамического массива-вектора